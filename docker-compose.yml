services:
    app:
        build:
            context: .
            dockerfile: Dockerfile.dev
        ports:
            - "4000:4000"
        environment:
            MIX_ENV: ${MIX_ENV:-dev}
            DATABASE_URL: ecto://${DATABASE_USERNAME:-postgres}:${DATABASE_PASSWORD:-postgres}@${DATABASE_HOST:-db}:${DATABASE_PORT:-5432}/${DATABASE_NAME:-slax_dev}
            DATABASE_POOL_SIZE: ${DATABASE_POOL_SIZE:-10}
        volumes:
            - .:/app
            - deps:/app/deps
            - _build:/app/_build
        depends_on:
            db:
                condition: service_healthy

    db:
        image: postgres:15-alpine
        environment:
            POSTGRES_USER: ${DATABASE_USERNAME:-postgres}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
            POSTGRES_DB: ${DATABASE_NAME:-slax_dev}
            PGDATA: /pgdata
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/pgdata
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${DATABASE_USERNAME:-postgres} -d ${DATABASE_NAME:-slax_dev}",
                ]
            interval: 5s
            timeout: 5s
            retries: 5

volumes:
    build:
    deps:
    node_modules:
    pgdata:
    static:
    _build:
